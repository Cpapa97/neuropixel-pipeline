# FROM docker/dev-environments-default:stable-1
FROM ubuntu:bionic

# Avoid issues by switching to noninteractive
ARG DEBIAN_FRONTEND=noninteractive

# RUN apt-get update && \
#     apt-get install -y software-properties-common wget

# Install CUDA

# # RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
# # RUN mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
# # RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
# RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-keyring_1.0-1_all.deb
# RUN dpkg -i cuda-keyring_1.0-1_all.deb
# RUN add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"
# RUN apt-get update
# RUN apt-get -y install cuda

# Install essentials, although this could likely just be put in the postCreateScript instead
# RUN apt-get update && \
#     apt-get install -y build-essential graphviz

# This doesn't install to the python3.8 that get's installed later by the vscode dev container python feature
# RUN apt-get update && \
#     apt-get install -y python3-dev python3-pip

# RUN pip3 install ipykernel && \
#     python3 -m ipykernel install

# WORKDIR /workspaces
# COPY . neuropixel-pipeline
# WORKDIR /workspaces/neuropixel-pipeline
# RUN pip3 install -e .